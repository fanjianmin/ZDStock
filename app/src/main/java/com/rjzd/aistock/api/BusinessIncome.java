/**
 * Autogenerated by Thrift Compiler (0.9.3)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.rjzd.aistock.api;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.TreeSet;
import java.util.TreeMap;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import javax.annotation.Generated;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked"})
/**
 * 财务业绩数据
 * 
 */
@Generated(value = "Autogenerated by Thrift Compiler (0.9.3)", date = "2017-08-21")
public class BusinessIncome implements org.apache.thrift.TBase<BusinessIncome, BusinessIncome._Fields>, java.io.Serializable, Cloneable, Comparable<BusinessIncome>, android.os.Parcelable {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("BusinessIncome");

  private static final org.apache.thrift.protocol.TField BUSINESS_INCOME_Q1_FIELD_DESC = new org.apache.thrift.protocol.TField("businessIncomeQ1", org.apache.thrift.protocol.TType.DOUBLE, (short)1);
  private static final org.apache.thrift.protocol.TField BUSINESS_INCOME_Q2_FIELD_DESC = new org.apache.thrift.protocol.TField("businessIncomeQ2", org.apache.thrift.protocol.TType.DOUBLE, (short)2);
  private static final org.apache.thrift.protocol.TField BUSINESS_INCOME_Q3_FIELD_DESC = new org.apache.thrift.protocol.TField("businessIncomeQ3", org.apache.thrift.protocol.TType.DOUBLE, (short)3);
  private static final org.apache.thrift.protocol.TField BUSINESS_INCOME_Q4_FIELD_DESC = new org.apache.thrift.protocol.TField("businessIncomeQ4", org.apache.thrift.protocol.TType.DOUBLE, (short)4);
  private static final org.apache.thrift.protocol.TField INCOME_YOY_FIELD_DESC = new org.apache.thrift.protocol.TField("incomeYoy", org.apache.thrift.protocol.TType.DOUBLE, (short)5);
  private static final org.apache.thrift.protocol.TField UNIT_FIELD_DESC = new org.apache.thrift.protocol.TField("unit", org.apache.thrift.protocol.TType.STRING, (short)6);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new BusinessIncomeStandardSchemeFactory());
    schemes.put(TupleScheme.class, new BusinessIncomeTupleSchemeFactory());
  }

  private double businessIncomeQ1; // required
  private double businessIncomeQ2; // required
  private double businessIncomeQ3; // required
  private double businessIncomeQ4; // required
  private double incomeYoy; // required
  private String unit; // required

  @Override
  public void writeToParcel(android.os.Parcel out, int flags) {
    //primitive bitfield of type: byte
    out.writeByte(__isset_bitfield);

    out.writeDouble(businessIncomeQ1);
    out.writeDouble(businessIncomeQ2);
    out.writeDouble(businessIncomeQ3);
    out.writeDouble(businessIncomeQ4);
    out.writeDouble(incomeYoy);
    out.writeString(unit);
  }

  @Override
  public int describeContents() {
    return 0;
  }

  public BusinessIncome(android.os.Parcel in) {
    //primitive bitfield of type: byte
    __isset_bitfield = in.readByte();

    this.businessIncomeQ1 = in.readDouble();
    this.businessIncomeQ2 = in.readDouble();
    this.businessIncomeQ3 = in.readDouble();
    this.businessIncomeQ4 = in.readDouble();
    this.incomeYoy = in.readDouble();
    this.unit= in.readString();
  }

  public static final android.os.Parcelable.Creator<BusinessIncome> CREATOR = new android.os.Parcelable.Creator<BusinessIncome>() {
    @Override
    public BusinessIncome[] newArray(int size) {
      return new BusinessIncome[size];
    }

    @Override
    public BusinessIncome createFromParcel(android.os.Parcel in) {
      return new BusinessIncome(in);
    }
  };

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    BUSINESS_INCOME_Q1((short)1, "businessIncomeQ1"),
    BUSINESS_INCOME_Q2((short)2, "businessIncomeQ2"),
    BUSINESS_INCOME_Q3((short)3, "businessIncomeQ3"),
    BUSINESS_INCOME_Q4((short)4, "businessIncomeQ4"),
    INCOME_YOY((short)5, "incomeYoy"),
    UNIT((short)6, "unit");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // BUSINESS_INCOME_Q1
          return BUSINESS_INCOME_Q1;
        case 2: // BUSINESS_INCOME_Q2
          return BUSINESS_INCOME_Q2;
        case 3: // BUSINESS_INCOME_Q3
          return BUSINESS_INCOME_Q3;
        case 4: // BUSINESS_INCOME_Q4
          return BUSINESS_INCOME_Q4;
        case 5: // INCOME_YOY
          return INCOME_YOY;
        case 6: // UNIT
          return UNIT;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __BUSINESSINCOMEQ1_ISSET_ID = 0;
  private static final int __BUSINESSINCOMEQ2_ISSET_ID = 1;
  private static final int __BUSINESSINCOMEQ3_ISSET_ID = 2;
  private static final int __BUSINESSINCOMEQ4_ISSET_ID = 3;
  private static final int __INCOMEYOY_ISSET_ID = 4;
  private byte __isset_bitfield = 0;
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.BUSINESS_INCOME_Q1, new org.apache.thrift.meta_data.FieldMetaData("businessIncomeQ1", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.BUSINESS_INCOME_Q2, new org.apache.thrift.meta_data.FieldMetaData("businessIncomeQ2", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.BUSINESS_INCOME_Q3, new org.apache.thrift.meta_data.FieldMetaData("businessIncomeQ3", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.BUSINESS_INCOME_Q4, new org.apache.thrift.meta_data.FieldMetaData("businessIncomeQ4", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.INCOME_YOY, new org.apache.thrift.meta_data.FieldMetaData("incomeYoy", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.UNIT, new org.apache.thrift.meta_data.FieldMetaData("unit", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(BusinessIncome.class, metaDataMap);
  }

  public BusinessIncome() {
  }

  public BusinessIncome(
    double businessIncomeQ1,
    double businessIncomeQ2,
    double businessIncomeQ3,
    double businessIncomeQ4,
    double incomeYoy,
    String unit)
  {
    this();
    this.businessIncomeQ1 = businessIncomeQ1;
    set_businessIncomeQ1_isSet(true);
    this.businessIncomeQ2 = businessIncomeQ2;
    set_businessIncomeQ2_isSet(true);
    this.businessIncomeQ3 = businessIncomeQ3;
    set_businessIncomeQ3_isSet(true);
    this.businessIncomeQ4 = businessIncomeQ4;
    set_businessIncomeQ4_isSet(true);
    this.incomeYoy = incomeYoy;
    set_incomeYoy_isSet(true);
    this.unit = unit;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public BusinessIncome(BusinessIncome other) {
    __isset_bitfield = other.__isset_bitfield;
    this.businessIncomeQ1 = other.businessIncomeQ1;
    this.businessIncomeQ2 = other.businessIncomeQ2;
    this.businessIncomeQ3 = other.businessIncomeQ3;
    this.businessIncomeQ4 = other.businessIncomeQ4;
    this.incomeYoy = other.incomeYoy;
    if (other.is_set_unit()) {
      this.unit = other.unit;
    }
  }

  public BusinessIncome deepCopy() {
    return new BusinessIncome(this);
  }

  public void clear() {
    set_businessIncomeQ1_isSet(false);
    this.businessIncomeQ1 = 0.0;
    set_businessIncomeQ2_isSet(false);
    this.businessIncomeQ2 = 0.0;
    set_businessIncomeQ3_isSet(false);
    this.businessIncomeQ3 = 0.0;
    set_businessIncomeQ4_isSet(false);
    this.businessIncomeQ4 = 0.0;
    set_incomeYoy_isSet(false);
    this.incomeYoy = 0.0;
    this.unit = null;
  }

  public double get_businessIncomeQ1() {
    return this.businessIncomeQ1;
  }

  public void set_businessIncomeQ1(double businessIncomeQ1) {
    this.businessIncomeQ1 = businessIncomeQ1;
    set_businessIncomeQ1_isSet(true);
  }

  public void unset_businessIncomeQ1() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __BUSINESSINCOMEQ1_ISSET_ID);
  }

  /** Returns true if field businessIncomeQ1 is set (has been assigned a value) and false otherwise */
  public boolean is_set_businessIncomeQ1() {
    return EncodingUtils.testBit(__isset_bitfield, __BUSINESSINCOMEQ1_ISSET_ID);
  }

  public void set_businessIncomeQ1_isSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __BUSINESSINCOMEQ1_ISSET_ID, value);
  }

  public double get_businessIncomeQ2() {
    return this.businessIncomeQ2;
  }

  public void set_businessIncomeQ2(double businessIncomeQ2) {
    this.businessIncomeQ2 = businessIncomeQ2;
    set_businessIncomeQ2_isSet(true);
  }

  public void unset_businessIncomeQ2() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __BUSINESSINCOMEQ2_ISSET_ID);
  }

  /** Returns true if field businessIncomeQ2 is set (has been assigned a value) and false otherwise */
  public boolean is_set_businessIncomeQ2() {
    return EncodingUtils.testBit(__isset_bitfield, __BUSINESSINCOMEQ2_ISSET_ID);
  }

  public void set_businessIncomeQ2_isSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __BUSINESSINCOMEQ2_ISSET_ID, value);
  }

  public double get_businessIncomeQ3() {
    return this.businessIncomeQ3;
  }

  public void set_businessIncomeQ3(double businessIncomeQ3) {
    this.businessIncomeQ3 = businessIncomeQ3;
    set_businessIncomeQ3_isSet(true);
  }

  public void unset_businessIncomeQ3() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __BUSINESSINCOMEQ3_ISSET_ID);
  }

  /** Returns true if field businessIncomeQ3 is set (has been assigned a value) and false otherwise */
  public boolean is_set_businessIncomeQ3() {
    return EncodingUtils.testBit(__isset_bitfield, __BUSINESSINCOMEQ3_ISSET_ID);
  }

  public void set_businessIncomeQ3_isSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __BUSINESSINCOMEQ3_ISSET_ID, value);
  }

  public double get_businessIncomeQ4() {
    return this.businessIncomeQ4;
  }

  public void set_businessIncomeQ4(double businessIncomeQ4) {
    this.businessIncomeQ4 = businessIncomeQ4;
    set_businessIncomeQ4_isSet(true);
  }

  public void unset_businessIncomeQ4() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __BUSINESSINCOMEQ4_ISSET_ID);
  }

  /** Returns true if field businessIncomeQ4 is set (has been assigned a value) and false otherwise */
  public boolean is_set_businessIncomeQ4() {
    return EncodingUtils.testBit(__isset_bitfield, __BUSINESSINCOMEQ4_ISSET_ID);
  }

  public void set_businessIncomeQ4_isSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __BUSINESSINCOMEQ4_ISSET_ID, value);
  }

  public double get_incomeYoy() {
    return this.incomeYoy;
  }

  public void set_incomeYoy(double incomeYoy) {
    this.incomeYoy = incomeYoy;
    set_incomeYoy_isSet(true);
  }

  public void unset_incomeYoy() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __INCOMEYOY_ISSET_ID);
  }

  /** Returns true if field incomeYoy is set (has been assigned a value) and false otherwise */
  public boolean is_set_incomeYoy() {
    return EncodingUtils.testBit(__isset_bitfield, __INCOMEYOY_ISSET_ID);
  }

  public void set_incomeYoy_isSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __INCOMEYOY_ISSET_ID, value);
  }

  public String get_unit() {
    return this.unit;
  }

  public void set_unit(String unit) {
    this.unit = unit;
  }

  public void unset_unit() {
    this.unit = null;
  }

  /** Returns true if field unit is set (has been assigned a value) and false otherwise */
  public boolean is_set_unit() {
    return this.unit != null;
  }

  public void set_unit_isSet(boolean value) {
    if (!value) {
      this.unit = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case BUSINESS_INCOME_Q1:
      if (value == null) {
        unset_businessIncomeQ1();
      } else {
        set_businessIncomeQ1((Double)value);
      }
      break;

    case BUSINESS_INCOME_Q2:
      if (value == null) {
        unset_businessIncomeQ2();
      } else {
        set_businessIncomeQ2((Double)value);
      }
      break;

    case BUSINESS_INCOME_Q3:
      if (value == null) {
        unset_businessIncomeQ3();
      } else {
        set_businessIncomeQ3((Double)value);
      }
      break;

    case BUSINESS_INCOME_Q4:
      if (value == null) {
        unset_businessIncomeQ4();
      } else {
        set_businessIncomeQ4((Double)value);
      }
      break;

    case INCOME_YOY:
      if (value == null) {
        unset_incomeYoy();
      } else {
        set_incomeYoy((Double)value);
      }
      break;

    case UNIT:
      if (value == null) {
        unset_unit();
      } else {
        set_unit((String)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case BUSINESS_INCOME_Q1:
      return get_businessIncomeQ1();

    case BUSINESS_INCOME_Q2:
      return get_businessIncomeQ2();

    case BUSINESS_INCOME_Q3:
      return get_businessIncomeQ3();

    case BUSINESS_INCOME_Q4:
      return get_businessIncomeQ4();

    case INCOME_YOY:
      return get_incomeYoy();

    case UNIT:
      return get_unit();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case BUSINESS_INCOME_Q1:
      return is_set_businessIncomeQ1();
    case BUSINESS_INCOME_Q2:
      return is_set_businessIncomeQ2();
    case BUSINESS_INCOME_Q3:
      return is_set_businessIncomeQ3();
    case BUSINESS_INCOME_Q4:
      return is_set_businessIncomeQ4();
    case INCOME_YOY:
      return is_set_incomeYoy();
    case UNIT:
      return is_set_unit();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof BusinessIncome)
      return this.equals((BusinessIncome)that);
    return false;
  }

  public boolean equals(BusinessIncome that) {
    if (that == null)
      return false;

    boolean this_present_businessIncomeQ1 = true;
    boolean that_present_businessIncomeQ1 = true;
    if (this_present_businessIncomeQ1 || that_present_businessIncomeQ1) {
      if (!(this_present_businessIncomeQ1 && that_present_businessIncomeQ1))
        return false;
      if (this.businessIncomeQ1 != that.businessIncomeQ1)
        return false;
    }

    boolean this_present_businessIncomeQ2 = true;
    boolean that_present_businessIncomeQ2 = true;
    if (this_present_businessIncomeQ2 || that_present_businessIncomeQ2) {
      if (!(this_present_businessIncomeQ2 && that_present_businessIncomeQ2))
        return false;
      if (this.businessIncomeQ2 != that.businessIncomeQ2)
        return false;
    }

    boolean this_present_businessIncomeQ3 = true;
    boolean that_present_businessIncomeQ3 = true;
    if (this_present_businessIncomeQ3 || that_present_businessIncomeQ3) {
      if (!(this_present_businessIncomeQ3 && that_present_businessIncomeQ3))
        return false;
      if (this.businessIncomeQ3 != that.businessIncomeQ3)
        return false;
    }

    boolean this_present_businessIncomeQ4 = true;
    boolean that_present_businessIncomeQ4 = true;
    if (this_present_businessIncomeQ4 || that_present_businessIncomeQ4) {
      if (!(this_present_businessIncomeQ4 && that_present_businessIncomeQ4))
        return false;
      if (this.businessIncomeQ4 != that.businessIncomeQ4)
        return false;
    }

    boolean this_present_incomeYoy = true;
    boolean that_present_incomeYoy = true;
    if (this_present_incomeYoy || that_present_incomeYoy) {
      if (!(this_present_incomeYoy && that_present_incomeYoy))
        return false;
      if (this.incomeYoy != that.incomeYoy)
        return false;
    }

    boolean this_present_unit = true && this.is_set_unit();
    boolean that_present_unit = true && that.is_set_unit();
    if (this_present_unit || that_present_unit) {
      if (!(this_present_unit && that_present_unit))
        return false;
      if (!this.unit.equals(that.unit))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    List<Object> list = new ArrayList<Object>();

    boolean present_businessIncomeQ1 = true;
    list.add(present_businessIncomeQ1);
    if (present_businessIncomeQ1)
      list.add(businessIncomeQ1);

    boolean present_businessIncomeQ2 = true;
    list.add(present_businessIncomeQ2);
    if (present_businessIncomeQ2)
      list.add(businessIncomeQ2);

    boolean present_businessIncomeQ3 = true;
    list.add(present_businessIncomeQ3);
    if (present_businessIncomeQ3)
      list.add(businessIncomeQ3);

    boolean present_businessIncomeQ4 = true;
    list.add(present_businessIncomeQ4);
    if (present_businessIncomeQ4)
      list.add(businessIncomeQ4);

    boolean present_incomeYoy = true;
    list.add(present_incomeYoy);
    if (present_incomeYoy)
      list.add(incomeYoy);

    boolean present_unit = true && (is_set_unit());
    list.add(present_unit);
    if (present_unit)
      list.add(unit);

    return list.hashCode();
  }

  @Override
  public int compareTo(BusinessIncome other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(is_set_businessIncomeQ1()).compareTo(other.is_set_businessIncomeQ1());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (is_set_businessIncomeQ1()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.businessIncomeQ1, other.businessIncomeQ1);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(is_set_businessIncomeQ2()).compareTo(other.is_set_businessIncomeQ2());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (is_set_businessIncomeQ2()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.businessIncomeQ2, other.businessIncomeQ2);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(is_set_businessIncomeQ3()).compareTo(other.is_set_businessIncomeQ3());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (is_set_businessIncomeQ3()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.businessIncomeQ3, other.businessIncomeQ3);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(is_set_businessIncomeQ4()).compareTo(other.is_set_businessIncomeQ4());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (is_set_businessIncomeQ4()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.businessIncomeQ4, other.businessIncomeQ4);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(is_set_incomeYoy()).compareTo(other.is_set_incomeYoy());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (is_set_incomeYoy()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.incomeYoy, other.incomeYoy);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(is_set_unit()).compareTo(other.is_set_unit());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (is_set_unit()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.unit, other.unit);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("BusinessIncome(");
    boolean first = true;

    sb.append("businessIncomeQ1:");
    sb.append(this.businessIncomeQ1);
    first = false;
    if (!first) sb.append(", ");
    sb.append("businessIncomeQ2:");
    sb.append(this.businessIncomeQ2);
    first = false;
    if (!first) sb.append(", ");
    sb.append("businessIncomeQ3:");
    sb.append(this.businessIncomeQ3);
    first = false;
    if (!first) sb.append(", ");
    sb.append("businessIncomeQ4:");
    sb.append(this.businessIncomeQ4);
    first = false;
    if (!first) sb.append(", ");
    sb.append("incomeYoy:");
    sb.append(this.incomeYoy);
    first = false;
    if (!first) sb.append(", ");
    sb.append("unit:");
    if (this.unit == null) {
      sb.append("null");
    } else {
      sb.append(this.unit);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    if (!is_set_businessIncomeQ1()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'businessIncomeQ1' is unset! Struct:" + toString());
    }

    if (!is_set_businessIncomeQ2()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'businessIncomeQ2' is unset! Struct:" + toString());
    }

    if (!is_set_businessIncomeQ3()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'businessIncomeQ3' is unset! Struct:" + toString());
    }

    if (!is_set_businessIncomeQ4()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'businessIncomeQ4' is unset! Struct:" + toString());
    }

    if (!is_set_incomeYoy()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'incomeYoy' is unset! Struct:" + toString());
    }

    if (!is_set_unit()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'unit' is unset! Struct:" + toString());
    }

    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te.getMessage());
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te.getMessage());
    }
  }

  private static class BusinessIncomeStandardSchemeFactory implements SchemeFactory {
    public BusinessIncomeStandardScheme getScheme() {
      return new BusinessIncomeStandardScheme();
    }
  }

  private static class BusinessIncomeStandardScheme extends StandardScheme<BusinessIncome> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, BusinessIncome struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // BUSINESS_INCOME_Q1
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.businessIncomeQ1 = iprot.readDouble();
              struct.set_businessIncomeQ1_isSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // BUSINESS_INCOME_Q2
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.businessIncomeQ2 = iprot.readDouble();
              struct.set_businessIncomeQ2_isSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // BUSINESS_INCOME_Q3
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.businessIncomeQ3 = iprot.readDouble();
              struct.set_businessIncomeQ3_isSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // BUSINESS_INCOME_Q4
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.businessIncomeQ4 = iprot.readDouble();
              struct.set_businessIncomeQ4_isSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // INCOME_YOY
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.incomeYoy = iprot.readDouble();
              struct.set_incomeYoy_isSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // UNIT
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.unit = iprot.readString();
              struct.set_unit_isSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, BusinessIncome struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      oprot.writeFieldBegin(BUSINESS_INCOME_Q1_FIELD_DESC);
      oprot.writeDouble(struct.businessIncomeQ1);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(BUSINESS_INCOME_Q2_FIELD_DESC);
      oprot.writeDouble(struct.businessIncomeQ2);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(BUSINESS_INCOME_Q3_FIELD_DESC);
      oprot.writeDouble(struct.businessIncomeQ3);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(BUSINESS_INCOME_Q4_FIELD_DESC);
      oprot.writeDouble(struct.businessIncomeQ4);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(INCOME_YOY_FIELD_DESC);
      oprot.writeDouble(struct.incomeYoy);
      oprot.writeFieldEnd();
      if (struct.unit != null) {
        oprot.writeFieldBegin(UNIT_FIELD_DESC);
        oprot.writeString(struct.unit);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class BusinessIncomeTupleSchemeFactory implements SchemeFactory {
    public BusinessIncomeTupleScheme getScheme() {
      return new BusinessIncomeTupleScheme();
    }
  }

  private static class BusinessIncomeTupleScheme extends TupleScheme<BusinessIncome> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, BusinessIncome struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      oprot.writeDouble(struct.businessIncomeQ1);
      oprot.writeDouble(struct.businessIncomeQ2);
      oprot.writeDouble(struct.businessIncomeQ3);
      oprot.writeDouble(struct.businessIncomeQ4);
      oprot.writeDouble(struct.incomeYoy);
      oprot.writeString(struct.unit);
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, BusinessIncome struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      struct.businessIncomeQ1 = iprot.readDouble();
      struct.set_businessIncomeQ1_isSet(true);
      struct.businessIncomeQ2 = iprot.readDouble();
      struct.set_businessIncomeQ2_isSet(true);
      struct.businessIncomeQ3 = iprot.readDouble();
      struct.set_businessIncomeQ3_isSet(true);
      struct.businessIncomeQ4 = iprot.readDouble();
      struct.set_businessIncomeQ4_isSet(true);
      struct.incomeYoy = iprot.readDouble();
      struct.set_incomeYoy_isSet(true);
      struct.unit = iprot.readString();
      struct.set_unit_isSet(true);
    }
  }

}

