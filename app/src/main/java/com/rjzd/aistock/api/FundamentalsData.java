/**
 * Autogenerated by Thrift Compiler (0.9.3)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.rjzd.aistock.api;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.TreeSet;
import java.util.TreeMap;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import javax.annotation.Generated;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked"})
@Generated(value = "Autogenerated by Thrift Compiler (0.9.3)", date = "2017-08-21")
public class FundamentalsData implements org.apache.thrift.TBase<FundamentalsData, FundamentalsData._Fields>, java.io.Serializable, Cloneable, Comparable<FundamentalsData>, android.os.Parcelable {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("FundamentalsData");

  private static final org.apache.thrift.protocol.TField STATUS_FIELD_DESC = new org.apache.thrift.protocol.TField("status", org.apache.thrift.protocol.TType.I32, (short)1);
  private static final org.apache.thrift.protocol.TField SELF_FUNDAMENTAL_FIELD_DESC = new org.apache.thrift.protocol.TField("selfFundamental", org.apache.thrift.protocol.TType.STRUCT, (short)2);
  private static final org.apache.thrift.protocol.TField INDUSTRY_AVG_FIELD_DESC = new org.apache.thrift.protocol.TField("industryAvg", org.apache.thrift.protocol.TType.STRUCT, (short)3);
  private static final org.apache.thrift.protocol.TField FIRST_FIELD_DESC = new org.apache.thrift.protocol.TField("first", org.apache.thrift.protocol.TType.STRUCT, (short)4);
  private static final org.apache.thrift.protocol.TField INDUSTRY_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("industryName", org.apache.thrift.protocol.TType.STRING, (short)5);
  private static final org.apache.thrift.protocol.TField TOTAL_FIELD_DESC = new org.apache.thrift.protocol.TField("total", org.apache.thrift.protocol.TType.I32, (short)6);
  private static final org.apache.thrift.protocol.TField RANK_FIELD_DESC = new org.apache.thrift.protocol.TField("rank", org.apache.thrift.protocol.TType.I32, (short)7);
  private static final org.apache.thrift.protocol.TField MSG_FIELD_DESC = new org.apache.thrift.protocol.TField("msg", org.apache.thrift.protocol.TType.STRING, (short)8);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new FundamentalsDataStandardSchemeFactory());
    schemes.put(TupleScheme.class, new FundamentalsDataTupleSchemeFactory());
  }

  private StatusCode status; // required
  private Fundamentals selfFundamental; // required
  private Fundamentals industryAvg; // required
  private Fundamentals first; // required
  private String industryName; // required
  private int total; // required
  private int rank; // required
  private String msg; // required

  @Override
  public void writeToParcel(android.os.Parcel out, int flags) {
    //primitive bitfield of type: byte
    out.writeByte(__isset_bitfield);

    out.writeInt(status.getValue());
    out.writeParcelable(selfFundamental, flags);
    out.writeParcelable(industryAvg, flags);
    out.writeParcelable(first, flags);
    out.writeString(industryName);
    out.writeInt(total);
    out.writeInt(rank);
    out.writeString(msg);
  }

  @Override
  public int describeContents() {
    return 0;
  }

  public FundamentalsData(android.os.Parcel in) {
    //primitive bitfield of type: byte
    __isset_bitfield = in.readByte();

    this.status = StatusCode.findByValue(in.readInt());
    this.selfFundamental= in.readParcelable(FundamentalsData.class.getClassLoader());
    this.industryAvg= in.readParcelable(FundamentalsData.class.getClassLoader());
    this.first= in.readParcelable(FundamentalsData.class.getClassLoader());
    this.industryName= in.readString();
    this.total = in.readInt();
    this.rank = in.readInt();
    this.msg= in.readString();
  }

  public static final android.os.Parcelable.Creator<FundamentalsData> CREATOR = new android.os.Parcelable.Creator<FundamentalsData>() {
    @Override
    public FundamentalsData[] newArray(int size) {
      return new FundamentalsData[size];
    }

    @Override
    public FundamentalsData createFromParcel(android.os.Parcel in) {
      return new FundamentalsData(in);
    }
  };

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    /**
     * 
     * @see StatusCode
     */
    STATUS((short)1, "status"),
    SELF_FUNDAMENTAL((short)2, "selfFundamental"),
    INDUSTRY_AVG((short)3, "industryAvg"),
    FIRST((short)4, "first"),
    INDUSTRY_NAME((short)5, "industryName"),
    TOTAL((short)6, "total"),
    RANK((short)7, "rank"),
    MSG((short)8, "msg");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // STATUS
          return STATUS;
        case 2: // SELF_FUNDAMENTAL
          return SELF_FUNDAMENTAL;
        case 3: // INDUSTRY_AVG
          return INDUSTRY_AVG;
        case 4: // FIRST
          return FIRST;
        case 5: // INDUSTRY_NAME
          return INDUSTRY_NAME;
        case 6: // TOTAL
          return TOTAL;
        case 7: // RANK
          return RANK;
        case 8: // MSG
          return MSG;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __TOTAL_ISSET_ID = 0;
  private static final int __RANK_ISSET_ID = 1;
  private byte __isset_bitfield = 0;
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.STATUS, new org.apache.thrift.meta_data.FieldMetaData("status", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.EnumMetaData(org.apache.thrift.protocol.TType.ENUM, StatusCode.class)));
    tmpMap.put(_Fields.SELF_FUNDAMENTAL, new org.apache.thrift.meta_data.FieldMetaData("selfFundamental", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, Fundamentals.class)));
    tmpMap.put(_Fields.INDUSTRY_AVG, new org.apache.thrift.meta_data.FieldMetaData("industryAvg", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, Fundamentals.class)));
    tmpMap.put(_Fields.FIRST, new org.apache.thrift.meta_data.FieldMetaData("first", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, Fundamentals.class)));
    tmpMap.put(_Fields.INDUSTRY_NAME, new org.apache.thrift.meta_data.FieldMetaData("industryName", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.TOTAL, new org.apache.thrift.meta_data.FieldMetaData("total", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.RANK, new org.apache.thrift.meta_data.FieldMetaData("rank", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.MSG, new org.apache.thrift.meta_data.FieldMetaData("msg", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(FundamentalsData.class, metaDataMap);
  }

  public FundamentalsData() {
  }

  public FundamentalsData(
    StatusCode status,
    Fundamentals selfFundamental,
    Fundamentals industryAvg,
    Fundamentals first,
    String industryName,
    int total,
    int rank,
    String msg)
  {
    this();
    this.status = status;
    this.selfFundamental = selfFundamental;
    this.industryAvg = industryAvg;
    this.first = first;
    this.industryName = industryName;
    this.total = total;
    set_total_isSet(true);
    this.rank = rank;
    set_rank_isSet(true);
    this.msg = msg;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public FundamentalsData(FundamentalsData other) {
    __isset_bitfield = other.__isset_bitfield;
    if (other.is_set_status()) {
      this.status = other.status;
    }
    if (other.is_set_selfFundamental()) {
      this.selfFundamental = new Fundamentals(other.selfFundamental);
    }
    if (other.is_set_industryAvg()) {
      this.industryAvg = new Fundamentals(other.industryAvg);
    }
    if (other.is_set_first()) {
      this.first = new Fundamentals(other.first);
    }
    if (other.is_set_industryName()) {
      this.industryName = other.industryName;
    }
    this.total = other.total;
    this.rank = other.rank;
    if (other.is_set_msg()) {
      this.msg = other.msg;
    }
  }

  public FundamentalsData deepCopy() {
    return new FundamentalsData(this);
  }

  public void clear() {
    this.status = null;
    if (this.selfFundamental != null) {
      this.selfFundamental.clear();
    }
    if (this.industryAvg != null) {
      this.industryAvg.clear();
    }
    if (this.first != null) {
      this.first.clear();
    }
    this.industryName = null;
    set_total_isSet(false);
    this.total = 0;
    set_rank_isSet(false);
    this.rank = 0;
    this.msg = null;
  }

  /**
   * 
   * @see StatusCode
   */
  public StatusCode get_status() {
    return this.status;
  }

  /**
   * 
   * @see StatusCode
   */
  public void set_status(StatusCode status) {
    this.status = status;
  }

  public void unset_status() {
    this.status = null;
  }

  /** Returns true if field status is set (has been assigned a value) and false otherwise */
  public boolean is_set_status() {
    return this.status != null;
  }

  public void set_status_isSet(boolean value) {
    if (!value) {
      this.status = null;
    }
  }

  public Fundamentals get_selfFundamental() {
    return this.selfFundamental;
  }

  public void set_selfFundamental(Fundamentals selfFundamental) {
    this.selfFundamental = selfFundamental;
  }

  public void unset_selfFundamental() {
    this.selfFundamental = null;
  }

  /** Returns true if field selfFundamental is set (has been assigned a value) and false otherwise */
  public boolean is_set_selfFundamental() {
    return this.selfFundamental != null;
  }

  public void set_selfFundamental_isSet(boolean value) {
    if (!value) {
      this.selfFundamental = null;
    }
  }

  public Fundamentals get_industryAvg() {
    return this.industryAvg;
  }

  public void set_industryAvg(Fundamentals industryAvg) {
    this.industryAvg = industryAvg;
  }

  public void unset_industryAvg() {
    this.industryAvg = null;
  }

  /** Returns true if field industryAvg is set (has been assigned a value) and false otherwise */
  public boolean is_set_industryAvg() {
    return this.industryAvg != null;
  }

  public void set_industryAvg_isSet(boolean value) {
    if (!value) {
      this.industryAvg = null;
    }
  }

  public Fundamentals get_first() {
    return this.first;
  }

  public void set_first(Fundamentals first) {
    this.first = first;
  }

  public void unset_first() {
    this.first = null;
  }

  /** Returns true if field first is set (has been assigned a value) and false otherwise */
  public boolean is_set_first() {
    return this.first != null;
  }

  public void set_first_isSet(boolean value) {
    if (!value) {
      this.first = null;
    }
  }

  public String get_industryName() {
    return this.industryName;
  }

  public void set_industryName(String industryName) {
    this.industryName = industryName;
  }

  public void unset_industryName() {
    this.industryName = null;
  }

  /** Returns true if field industryName is set (has been assigned a value) and false otherwise */
  public boolean is_set_industryName() {
    return this.industryName != null;
  }

  public void set_industryName_isSet(boolean value) {
    if (!value) {
      this.industryName = null;
    }
  }

  public int get_total() {
    return this.total;
  }

  public void set_total(int total) {
    this.total = total;
    set_total_isSet(true);
  }

  public void unset_total() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __TOTAL_ISSET_ID);
  }

  /** Returns true if field total is set (has been assigned a value) and false otherwise */
  public boolean is_set_total() {
    return EncodingUtils.testBit(__isset_bitfield, __TOTAL_ISSET_ID);
  }

  public void set_total_isSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __TOTAL_ISSET_ID, value);
  }

  public int get_rank() {
    return this.rank;
  }

  public void set_rank(int rank) {
    this.rank = rank;
    set_rank_isSet(true);
  }

  public void unset_rank() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __RANK_ISSET_ID);
  }

  /** Returns true if field rank is set (has been assigned a value) and false otherwise */
  public boolean is_set_rank() {
    return EncodingUtils.testBit(__isset_bitfield, __RANK_ISSET_ID);
  }

  public void set_rank_isSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __RANK_ISSET_ID, value);
  }

  public String get_msg() {
    return this.msg;
  }

  public void set_msg(String msg) {
    this.msg = msg;
  }

  public void unset_msg() {
    this.msg = null;
  }

  /** Returns true if field msg is set (has been assigned a value) and false otherwise */
  public boolean is_set_msg() {
    return this.msg != null;
  }

  public void set_msg_isSet(boolean value) {
    if (!value) {
      this.msg = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case STATUS:
      if (value == null) {
        unset_status();
      } else {
        set_status((StatusCode)value);
      }
      break;

    case SELF_FUNDAMENTAL:
      if (value == null) {
        unset_selfFundamental();
      } else {
        set_selfFundamental((Fundamentals)value);
      }
      break;

    case INDUSTRY_AVG:
      if (value == null) {
        unset_industryAvg();
      } else {
        set_industryAvg((Fundamentals)value);
      }
      break;

    case FIRST:
      if (value == null) {
        unset_first();
      } else {
        set_first((Fundamentals)value);
      }
      break;

    case INDUSTRY_NAME:
      if (value == null) {
        unset_industryName();
      } else {
        set_industryName((String)value);
      }
      break;

    case TOTAL:
      if (value == null) {
        unset_total();
      } else {
        set_total((Integer)value);
      }
      break;

    case RANK:
      if (value == null) {
        unset_rank();
      } else {
        set_rank((Integer)value);
      }
      break;

    case MSG:
      if (value == null) {
        unset_msg();
      } else {
        set_msg((String)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case STATUS:
      return get_status();

    case SELF_FUNDAMENTAL:
      return get_selfFundamental();

    case INDUSTRY_AVG:
      return get_industryAvg();

    case FIRST:
      return get_first();

    case INDUSTRY_NAME:
      return get_industryName();

    case TOTAL:
      return get_total();

    case RANK:
      return get_rank();

    case MSG:
      return get_msg();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case STATUS:
      return is_set_status();
    case SELF_FUNDAMENTAL:
      return is_set_selfFundamental();
    case INDUSTRY_AVG:
      return is_set_industryAvg();
    case FIRST:
      return is_set_first();
    case INDUSTRY_NAME:
      return is_set_industryName();
    case TOTAL:
      return is_set_total();
    case RANK:
      return is_set_rank();
    case MSG:
      return is_set_msg();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof FundamentalsData)
      return this.equals((FundamentalsData)that);
    return false;
  }

  public boolean equals(FundamentalsData that) {
    if (that == null)
      return false;

    boolean this_present_status = true && this.is_set_status();
    boolean that_present_status = true && that.is_set_status();
    if (this_present_status || that_present_status) {
      if (!(this_present_status && that_present_status))
        return false;
      if (!this.status.equals(that.status))
        return false;
    }

    boolean this_present_selfFundamental = true && this.is_set_selfFundamental();
    boolean that_present_selfFundamental = true && that.is_set_selfFundamental();
    if (this_present_selfFundamental || that_present_selfFundamental) {
      if (!(this_present_selfFundamental && that_present_selfFundamental))
        return false;
      if (!this.selfFundamental.equals(that.selfFundamental))
        return false;
    }

    boolean this_present_industryAvg = true && this.is_set_industryAvg();
    boolean that_present_industryAvg = true && that.is_set_industryAvg();
    if (this_present_industryAvg || that_present_industryAvg) {
      if (!(this_present_industryAvg && that_present_industryAvg))
        return false;
      if (!this.industryAvg.equals(that.industryAvg))
        return false;
    }

    boolean this_present_first = true && this.is_set_first();
    boolean that_present_first = true && that.is_set_first();
    if (this_present_first || that_present_first) {
      if (!(this_present_first && that_present_first))
        return false;
      if (!this.first.equals(that.first))
        return false;
    }

    boolean this_present_industryName = true && this.is_set_industryName();
    boolean that_present_industryName = true && that.is_set_industryName();
    if (this_present_industryName || that_present_industryName) {
      if (!(this_present_industryName && that_present_industryName))
        return false;
      if (!this.industryName.equals(that.industryName))
        return false;
    }

    boolean this_present_total = true;
    boolean that_present_total = true;
    if (this_present_total || that_present_total) {
      if (!(this_present_total && that_present_total))
        return false;
      if (this.total != that.total)
        return false;
    }

    boolean this_present_rank = true;
    boolean that_present_rank = true;
    if (this_present_rank || that_present_rank) {
      if (!(this_present_rank && that_present_rank))
        return false;
      if (this.rank != that.rank)
        return false;
    }

    boolean this_present_msg = true && this.is_set_msg();
    boolean that_present_msg = true && that.is_set_msg();
    if (this_present_msg || that_present_msg) {
      if (!(this_present_msg && that_present_msg))
        return false;
      if (!this.msg.equals(that.msg))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    List<Object> list = new ArrayList<Object>();

    boolean present_status = true && (is_set_status());
    list.add(present_status);
    if (present_status)
      list.add(status.getValue());

    boolean present_selfFundamental = true && (is_set_selfFundamental());
    list.add(present_selfFundamental);
    if (present_selfFundamental)
      list.add(selfFundamental);

    boolean present_industryAvg = true && (is_set_industryAvg());
    list.add(present_industryAvg);
    if (present_industryAvg)
      list.add(industryAvg);

    boolean present_first = true && (is_set_first());
    list.add(present_first);
    if (present_first)
      list.add(first);

    boolean present_industryName = true && (is_set_industryName());
    list.add(present_industryName);
    if (present_industryName)
      list.add(industryName);

    boolean present_total = true;
    list.add(present_total);
    if (present_total)
      list.add(total);

    boolean present_rank = true;
    list.add(present_rank);
    if (present_rank)
      list.add(rank);

    boolean present_msg = true && (is_set_msg());
    list.add(present_msg);
    if (present_msg)
      list.add(msg);

    return list.hashCode();
  }

  @Override
  public int compareTo(FundamentalsData other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(is_set_status()).compareTo(other.is_set_status());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (is_set_status()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.status, other.status);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(is_set_selfFundamental()).compareTo(other.is_set_selfFundamental());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (is_set_selfFundamental()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.selfFundamental, other.selfFundamental);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(is_set_industryAvg()).compareTo(other.is_set_industryAvg());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (is_set_industryAvg()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.industryAvg, other.industryAvg);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(is_set_first()).compareTo(other.is_set_first());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (is_set_first()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.first, other.first);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(is_set_industryName()).compareTo(other.is_set_industryName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (is_set_industryName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.industryName, other.industryName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(is_set_total()).compareTo(other.is_set_total());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (is_set_total()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.total, other.total);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(is_set_rank()).compareTo(other.is_set_rank());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (is_set_rank()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.rank, other.rank);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(is_set_msg()).compareTo(other.is_set_msg());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (is_set_msg()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.msg, other.msg);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("FundamentalsData(");
    boolean first = true;

    sb.append("status:");
    if (this.status == null) {
      sb.append("null");
    } else {
      sb.append(this.status);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("selfFundamental:");
    if (this.selfFundamental == null) {
      sb.append("null");
    } else {
      sb.append(this.selfFundamental);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("industryAvg:");
    if (this.industryAvg == null) {
      sb.append("null");
    } else {
      sb.append(this.industryAvg);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("first:");
    if (this.first == null) {
      sb.append("null");
    } else {
      sb.append(this.first);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("industryName:");
    if (this.industryName == null) {
      sb.append("null");
    } else {
      sb.append(this.industryName);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("total:");
    sb.append(this.total);
    first = false;
    if (!first) sb.append(", ");
    sb.append("rank:");
    sb.append(this.rank);
    first = false;
    if (!first) sb.append(", ");
    sb.append("msg:");
    if (this.msg == null) {
      sb.append("null");
    } else {
      sb.append(this.msg);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    if (!is_set_status()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'status' is unset! Struct:" + toString());
    }

    if (!is_set_selfFundamental()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'selfFundamental' is unset! Struct:" + toString());
    }

    if (!is_set_industryAvg()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'industryAvg' is unset! Struct:" + toString());
    }

    if (!is_set_first()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'first' is unset! Struct:" + toString());
    }

    if (!is_set_industryName()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'industryName' is unset! Struct:" + toString());
    }

    if (!is_set_total()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'total' is unset! Struct:" + toString());
    }

    if (!is_set_rank()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'rank' is unset! Struct:" + toString());
    }

    if (!is_set_msg()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'msg' is unset! Struct:" + toString());
    }

    // check for sub-struct validity
    if (selfFundamental != null) {
      selfFundamental.validate();
    }
    if (industryAvg != null) {
      industryAvg.validate();
    }
    if (first != null) {
      first.validate();
    }
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te.getMessage());
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te.getMessage());
    }
  }

  private static class FundamentalsDataStandardSchemeFactory implements SchemeFactory {
    public FundamentalsDataStandardScheme getScheme() {
      return new FundamentalsDataStandardScheme();
    }
  }

  private static class FundamentalsDataStandardScheme extends StandardScheme<FundamentalsData> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, FundamentalsData struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // STATUS
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.status = com.rjzd.aistock.api.StatusCode.findByValue(iprot.readI32());
              struct.set_status_isSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // SELF_FUNDAMENTAL
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              if (struct.selfFundamental == null) {
                struct.selfFundamental = new Fundamentals();
              }
              struct.selfFundamental.read(iprot);
              struct.set_selfFundamental_isSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // INDUSTRY_AVG
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              if (struct.industryAvg == null) {
                struct.industryAvg = new Fundamentals();
              }
              struct.industryAvg.read(iprot);
              struct.set_industryAvg_isSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // FIRST
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              if (struct.first == null) {
                struct.first = new Fundamentals();
              }
              struct.first.read(iprot);
              struct.set_first_isSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // INDUSTRY_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.industryName = iprot.readString();
              struct.set_industryName_isSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // TOTAL
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.total = iprot.readI32();
              struct.set_total_isSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // RANK
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.rank = iprot.readI32();
              struct.set_rank_isSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // MSG
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.msg = iprot.readString();
              struct.set_msg_isSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, FundamentalsData struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.status != null) {
        oprot.writeFieldBegin(STATUS_FIELD_DESC);
        oprot.writeI32(struct.status.getValue());
        oprot.writeFieldEnd();
      }
      if (struct.selfFundamental != null) {
        oprot.writeFieldBegin(SELF_FUNDAMENTAL_FIELD_DESC);
        struct.selfFundamental.write(oprot);
        oprot.writeFieldEnd();
      }
      if (struct.industryAvg != null) {
        oprot.writeFieldBegin(INDUSTRY_AVG_FIELD_DESC);
        struct.industryAvg.write(oprot);
        oprot.writeFieldEnd();
      }
      if (struct.first != null) {
        oprot.writeFieldBegin(FIRST_FIELD_DESC);
        struct.first.write(oprot);
        oprot.writeFieldEnd();
      }
      if (struct.industryName != null) {
        oprot.writeFieldBegin(INDUSTRY_NAME_FIELD_DESC);
        oprot.writeString(struct.industryName);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(TOTAL_FIELD_DESC);
      oprot.writeI32(struct.total);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(RANK_FIELD_DESC);
      oprot.writeI32(struct.rank);
      oprot.writeFieldEnd();
      if (struct.msg != null) {
        oprot.writeFieldBegin(MSG_FIELD_DESC);
        oprot.writeString(struct.msg);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class FundamentalsDataTupleSchemeFactory implements SchemeFactory {
    public FundamentalsDataTupleScheme getScheme() {
      return new FundamentalsDataTupleScheme();
    }
  }

  private static class FundamentalsDataTupleScheme extends TupleScheme<FundamentalsData> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, FundamentalsData struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      oprot.writeI32(struct.status.getValue());
      struct.selfFundamental.write(oprot);
      struct.industryAvg.write(oprot);
      struct.first.write(oprot);
      oprot.writeString(struct.industryName);
      oprot.writeI32(struct.total);
      oprot.writeI32(struct.rank);
      oprot.writeString(struct.msg);
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, FundamentalsData struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      struct.status = com.rjzd.aistock.api.StatusCode.findByValue(iprot.readI32());
      struct.set_status_isSet(true);
      if (struct.selfFundamental == null) {
        struct.selfFundamental = new Fundamentals();
      }
      struct.selfFundamental.read(iprot);
      struct.set_selfFundamental_isSet(true);
      if (struct.industryAvg == null) {
        struct.industryAvg = new Fundamentals();
      }
      struct.industryAvg.read(iprot);
      struct.set_industryAvg_isSet(true);
      if (struct.first == null) {
        struct.first = new Fundamentals();
      }
      struct.first.read(iprot);
      struct.set_first_isSet(true);
      struct.industryName = iprot.readString();
      struct.set_industryName_isSet(true);
      struct.total = iprot.readI32();
      struct.set_total_isSet(true);
      struct.rank = iprot.readI32();
      struct.set_rank_isSet(true);
      struct.msg = iprot.readString();
      struct.set_msg_isSet(true);
    }
  }

}

