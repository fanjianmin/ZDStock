/**
 * Autogenerated by Thrift Compiler (0.9.3)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.rjzd.aistock.api;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.TreeSet;
import java.util.TreeMap;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import javax.annotation.Generated;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked"})
/**
 * 资金流向
 * 
 */
@Generated(value = "Autogenerated by Thrift Compiler (0.9.3)", date = "2017-08-21")
public class Funds implements org.apache.thrift.TBase<Funds, Funds._Fields>, java.io.Serializable, Cloneable, Comparable<Funds>, android.os.Parcelable {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("Funds");

  private static final org.apache.thrift.protocol.TField ZHULI_IN_RATE_FIELD_DESC = new org.apache.thrift.protocol.TField("zhuliInRate", org.apache.thrift.protocol.TType.DOUBLE, (short)1);
  private static final org.apache.thrift.protocol.TField ZHULI_OUT_RATE_FIELD_DESC = new org.apache.thrift.protocol.TField("zhuliOutRate", org.apache.thrift.protocol.TType.DOUBLE, (short)2);
  private static final org.apache.thrift.protocol.TField ZHULI_IN_FIELD_DESC = new org.apache.thrift.protocol.TField("zhuliIn", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField ZHULI_OUT_FIELD_DESC = new org.apache.thrift.protocol.TField("zhuliOut", org.apache.thrift.protocol.TType.STRING, (short)4);
  private static final org.apache.thrift.protocol.TField ZHULI_NET_IN_FIELD_DESC = new org.apache.thrift.protocol.TField("zhuliNetIn", org.apache.thrift.protocol.TType.STRING, (short)5);
  private static final org.apache.thrift.protocol.TField SANHU_IN_RATE_FIELD_DESC = new org.apache.thrift.protocol.TField("sanhuInRate", org.apache.thrift.protocol.TType.DOUBLE, (short)6);
  private static final org.apache.thrift.protocol.TField SANHU_OUT_RATE_FIELD_DESC = new org.apache.thrift.protocol.TField("sanhuOutRate", org.apache.thrift.protocol.TType.DOUBLE, (short)7);
  private static final org.apache.thrift.protocol.TField SANHU_NET_IN_FIELD_DESC = new org.apache.thrift.protocol.TField("sanhuNetIn", org.apache.thrift.protocol.TType.STRING, (short)8);
  private static final org.apache.thrift.protocol.TField IN_TOTAL_FIELD_DESC = new org.apache.thrift.protocol.TField("inTotal", org.apache.thrift.protocol.TType.STRING, (short)9);
  private static final org.apache.thrift.protocol.TField OUT_TOTAL_FIELD_DESC = new org.apache.thrift.protocol.TField("outTotal", org.apache.thrift.protocol.TType.STRING, (short)10);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new FundsStandardSchemeFactory());
    schemes.put(TupleScheme.class, new FundsTupleSchemeFactory());
  }

  private double zhuliInRate; // required
  private double zhuliOutRate; // required
  private String zhuliIn; // required
  private String zhuliOut; // required
  private String zhuliNetIn; // required
  private double sanhuInRate; // required
  private double sanhuOutRate; // required
  private String sanhuNetIn; // optional
  private String inTotal; // optional
  private String outTotal; // optional

  @Override
  public void writeToParcel(android.os.Parcel out, int flags) {
    //primitive bitfield of type: byte
    out.writeByte(__isset_bitfield);

    out.writeDouble(zhuliInRate);
    out.writeDouble(zhuliOutRate);
    out.writeString(zhuliIn);
    out.writeString(zhuliOut);
    out.writeString(zhuliNetIn);
    out.writeDouble(sanhuInRate);
    out.writeDouble(sanhuOutRate);
    out.writeString(sanhuNetIn);
    out.writeString(inTotal);
    out.writeString(outTotal);
  }

  @Override
  public int describeContents() {
    return 0;
  }

  public Funds(android.os.Parcel in) {
    //primitive bitfield of type: byte
    __isset_bitfield = in.readByte();

    this.zhuliInRate = in.readDouble();
    this.zhuliOutRate = in.readDouble();
    this.zhuliIn= in.readString();
    this.zhuliOut= in.readString();
    this.zhuliNetIn= in.readString();
    this.sanhuInRate = in.readDouble();
    this.sanhuOutRate = in.readDouble();
    this.sanhuNetIn= in.readString();
    this.inTotal= in.readString();
    this.outTotal= in.readString();
  }

  public static final android.os.Parcelable.Creator<Funds> CREATOR = new android.os.Parcelable.Creator<Funds>() {
    @Override
    public Funds[] newArray(int size) {
      return new Funds[size];
    }

    @Override
    public Funds createFromParcel(android.os.Parcel in) {
      return new Funds(in);
    }
  };

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    ZHULI_IN_RATE((short)1, "zhuliInRate"),
    ZHULI_OUT_RATE((short)2, "zhuliOutRate"),
    ZHULI_IN((short)3, "zhuliIn"),
    ZHULI_OUT((short)4, "zhuliOut"),
    ZHULI_NET_IN((short)5, "zhuliNetIn"),
    SANHU_IN_RATE((short)6, "sanhuInRate"),
    SANHU_OUT_RATE((short)7, "sanhuOutRate"),
    SANHU_NET_IN((short)8, "sanhuNetIn"),
    IN_TOTAL((short)9, "inTotal"),
    OUT_TOTAL((short)10, "outTotal");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // ZHULI_IN_RATE
          return ZHULI_IN_RATE;
        case 2: // ZHULI_OUT_RATE
          return ZHULI_OUT_RATE;
        case 3: // ZHULI_IN
          return ZHULI_IN;
        case 4: // ZHULI_OUT
          return ZHULI_OUT;
        case 5: // ZHULI_NET_IN
          return ZHULI_NET_IN;
        case 6: // SANHU_IN_RATE
          return SANHU_IN_RATE;
        case 7: // SANHU_OUT_RATE
          return SANHU_OUT_RATE;
        case 8: // SANHU_NET_IN
          return SANHU_NET_IN;
        case 9: // IN_TOTAL
          return IN_TOTAL;
        case 10: // OUT_TOTAL
          return OUT_TOTAL;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __ZHULIINRATE_ISSET_ID = 0;
  private static final int __ZHULIOUTRATE_ISSET_ID = 1;
  private static final int __SANHUINRATE_ISSET_ID = 2;
  private static final int __SANHUOUTRATE_ISSET_ID = 3;
  private byte __isset_bitfield = 0;
  private static final _Fields optionals[] = {_Fields.SANHU_NET_IN,_Fields.IN_TOTAL,_Fields.OUT_TOTAL};
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.ZHULI_IN_RATE, new org.apache.thrift.meta_data.FieldMetaData("zhuliInRate", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.ZHULI_OUT_RATE, new org.apache.thrift.meta_data.FieldMetaData("zhuliOutRate", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.ZHULI_IN, new org.apache.thrift.meta_data.FieldMetaData("zhuliIn", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.ZHULI_OUT, new org.apache.thrift.meta_data.FieldMetaData("zhuliOut", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.ZHULI_NET_IN, new org.apache.thrift.meta_data.FieldMetaData("zhuliNetIn", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.SANHU_IN_RATE, new org.apache.thrift.meta_data.FieldMetaData("sanhuInRate", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.SANHU_OUT_RATE, new org.apache.thrift.meta_data.FieldMetaData("sanhuOutRate", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.SANHU_NET_IN, new org.apache.thrift.meta_data.FieldMetaData("sanhuNetIn", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.IN_TOTAL, new org.apache.thrift.meta_data.FieldMetaData("inTotal", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.OUT_TOTAL, new org.apache.thrift.meta_data.FieldMetaData("outTotal", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(Funds.class, metaDataMap);
  }

  public Funds() {
  }

  public Funds(
    double zhuliInRate,
    double zhuliOutRate,
    String zhuliIn,
    String zhuliOut,
    String zhuliNetIn,
    double sanhuInRate,
    double sanhuOutRate)
  {
    this();
    this.zhuliInRate = zhuliInRate;
    set_zhuliInRate_isSet(true);
    this.zhuliOutRate = zhuliOutRate;
    set_zhuliOutRate_isSet(true);
    this.zhuliIn = zhuliIn;
    this.zhuliOut = zhuliOut;
    this.zhuliNetIn = zhuliNetIn;
    this.sanhuInRate = sanhuInRate;
    set_sanhuInRate_isSet(true);
    this.sanhuOutRate = sanhuOutRate;
    set_sanhuOutRate_isSet(true);
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public Funds(Funds other) {
    __isset_bitfield = other.__isset_bitfield;
    this.zhuliInRate = other.zhuliInRate;
    this.zhuliOutRate = other.zhuliOutRate;
    if (other.is_set_zhuliIn()) {
      this.zhuliIn = other.zhuliIn;
    }
    if (other.is_set_zhuliOut()) {
      this.zhuliOut = other.zhuliOut;
    }
    if (other.is_set_zhuliNetIn()) {
      this.zhuliNetIn = other.zhuliNetIn;
    }
    this.sanhuInRate = other.sanhuInRate;
    this.sanhuOutRate = other.sanhuOutRate;
    if (other.is_set_sanhuNetIn()) {
      this.sanhuNetIn = other.sanhuNetIn;
    }
    if (other.is_set_inTotal()) {
      this.inTotal = other.inTotal;
    }
    if (other.is_set_outTotal()) {
      this.outTotal = other.outTotal;
    }
  }

  public Funds deepCopy() {
    return new Funds(this);
  }

  public void clear() {
    set_zhuliInRate_isSet(false);
    this.zhuliInRate = 0.0;
    set_zhuliOutRate_isSet(false);
    this.zhuliOutRate = 0.0;
    this.zhuliIn = null;
    this.zhuliOut = null;
    this.zhuliNetIn = null;
    set_sanhuInRate_isSet(false);
    this.sanhuInRate = 0.0;
    set_sanhuOutRate_isSet(false);
    this.sanhuOutRate = 0.0;
    this.sanhuNetIn = null;
    this.inTotal = null;
    this.outTotal = null;
  }

  public double get_zhuliInRate() {
    return this.zhuliInRate;
  }

  public void set_zhuliInRate(double zhuliInRate) {
    this.zhuliInRate = zhuliInRate;
    set_zhuliInRate_isSet(true);
  }

  public void unset_zhuliInRate() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ZHULIINRATE_ISSET_ID);
  }

  /** Returns true if field zhuliInRate is set (has been assigned a value) and false otherwise */
  public boolean is_set_zhuliInRate() {
    return EncodingUtils.testBit(__isset_bitfield, __ZHULIINRATE_ISSET_ID);
  }

  public void set_zhuliInRate_isSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ZHULIINRATE_ISSET_ID, value);
  }

  public double get_zhuliOutRate() {
    return this.zhuliOutRate;
  }

  public void set_zhuliOutRate(double zhuliOutRate) {
    this.zhuliOutRate = zhuliOutRate;
    set_zhuliOutRate_isSet(true);
  }

  public void unset_zhuliOutRate() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ZHULIOUTRATE_ISSET_ID);
  }

  /** Returns true if field zhuliOutRate is set (has been assigned a value) and false otherwise */
  public boolean is_set_zhuliOutRate() {
    return EncodingUtils.testBit(__isset_bitfield, __ZHULIOUTRATE_ISSET_ID);
  }

  public void set_zhuliOutRate_isSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ZHULIOUTRATE_ISSET_ID, value);
  }

  public String get_zhuliIn() {
    return this.zhuliIn;
  }

  public void set_zhuliIn(String zhuliIn) {
    this.zhuliIn = zhuliIn;
  }

  public void unset_zhuliIn() {
    this.zhuliIn = null;
  }

  /** Returns true if field zhuliIn is set (has been assigned a value) and false otherwise */
  public boolean is_set_zhuliIn() {
    return this.zhuliIn != null;
  }

  public void set_zhuliIn_isSet(boolean value) {
    if (!value) {
      this.zhuliIn = null;
    }
  }

  public String get_zhuliOut() {
    return this.zhuliOut;
  }

  public void set_zhuliOut(String zhuliOut) {
    this.zhuliOut = zhuliOut;
  }

  public void unset_zhuliOut() {
    this.zhuliOut = null;
  }

  /** Returns true if field zhuliOut is set (has been assigned a value) and false otherwise */
  public boolean is_set_zhuliOut() {
    return this.zhuliOut != null;
  }

  public void set_zhuliOut_isSet(boolean value) {
    if (!value) {
      this.zhuliOut = null;
    }
  }

  public String get_zhuliNetIn() {
    return this.zhuliNetIn;
  }

  public void set_zhuliNetIn(String zhuliNetIn) {
    this.zhuliNetIn = zhuliNetIn;
  }

  public void unset_zhuliNetIn() {
    this.zhuliNetIn = null;
  }

  /** Returns true if field zhuliNetIn is set (has been assigned a value) and false otherwise */
  public boolean is_set_zhuliNetIn() {
    return this.zhuliNetIn != null;
  }

  public void set_zhuliNetIn_isSet(boolean value) {
    if (!value) {
      this.zhuliNetIn = null;
    }
  }

  public double get_sanhuInRate() {
    return this.sanhuInRate;
  }

  public void set_sanhuInRate(double sanhuInRate) {
    this.sanhuInRate = sanhuInRate;
    set_sanhuInRate_isSet(true);
  }

  public void unset_sanhuInRate() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __SANHUINRATE_ISSET_ID);
  }

  /** Returns true if field sanhuInRate is set (has been assigned a value) and false otherwise */
  public boolean is_set_sanhuInRate() {
    return EncodingUtils.testBit(__isset_bitfield, __SANHUINRATE_ISSET_ID);
  }

  public void set_sanhuInRate_isSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __SANHUINRATE_ISSET_ID, value);
  }

  public double get_sanhuOutRate() {
    return this.sanhuOutRate;
  }

  public void set_sanhuOutRate(double sanhuOutRate) {
    this.sanhuOutRate = sanhuOutRate;
    set_sanhuOutRate_isSet(true);
  }

  public void unset_sanhuOutRate() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __SANHUOUTRATE_ISSET_ID);
  }

  /** Returns true if field sanhuOutRate is set (has been assigned a value) and false otherwise */
  public boolean is_set_sanhuOutRate() {
    return EncodingUtils.testBit(__isset_bitfield, __SANHUOUTRATE_ISSET_ID);
  }

  public void set_sanhuOutRate_isSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __SANHUOUTRATE_ISSET_ID, value);
  }

  public String get_sanhuNetIn() {
    return this.sanhuNetIn;
  }

  public void set_sanhuNetIn(String sanhuNetIn) {
    this.sanhuNetIn = sanhuNetIn;
  }

  public void unset_sanhuNetIn() {
    this.sanhuNetIn = null;
  }

  /** Returns true if field sanhuNetIn is set (has been assigned a value) and false otherwise */
  public boolean is_set_sanhuNetIn() {
    return this.sanhuNetIn != null;
  }

  public void set_sanhuNetIn_isSet(boolean value) {
    if (!value) {
      this.sanhuNetIn = null;
    }
  }

  public String get_inTotal() {
    return this.inTotal;
  }

  public void set_inTotal(String inTotal) {
    this.inTotal = inTotal;
  }

  public void unset_inTotal() {
    this.inTotal = null;
  }

  /** Returns true if field inTotal is set (has been assigned a value) and false otherwise */
  public boolean is_set_inTotal() {
    return this.inTotal != null;
  }

  public void set_inTotal_isSet(boolean value) {
    if (!value) {
      this.inTotal = null;
    }
  }

  public String get_outTotal() {
    return this.outTotal;
  }

  public void set_outTotal(String outTotal) {
    this.outTotal = outTotal;
  }

  public void unset_outTotal() {
    this.outTotal = null;
  }

  /** Returns true if field outTotal is set (has been assigned a value) and false otherwise */
  public boolean is_set_outTotal() {
    return this.outTotal != null;
  }

  public void set_outTotal_isSet(boolean value) {
    if (!value) {
      this.outTotal = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case ZHULI_IN_RATE:
      if (value == null) {
        unset_zhuliInRate();
      } else {
        set_zhuliInRate((Double)value);
      }
      break;

    case ZHULI_OUT_RATE:
      if (value == null) {
        unset_zhuliOutRate();
      } else {
        set_zhuliOutRate((Double)value);
      }
      break;

    case ZHULI_IN:
      if (value == null) {
        unset_zhuliIn();
      } else {
        set_zhuliIn((String)value);
      }
      break;

    case ZHULI_OUT:
      if (value == null) {
        unset_zhuliOut();
      } else {
        set_zhuliOut((String)value);
      }
      break;

    case ZHULI_NET_IN:
      if (value == null) {
        unset_zhuliNetIn();
      } else {
        set_zhuliNetIn((String)value);
      }
      break;

    case SANHU_IN_RATE:
      if (value == null) {
        unset_sanhuInRate();
      } else {
        set_sanhuInRate((Double)value);
      }
      break;

    case SANHU_OUT_RATE:
      if (value == null) {
        unset_sanhuOutRate();
      } else {
        set_sanhuOutRate((Double)value);
      }
      break;

    case SANHU_NET_IN:
      if (value == null) {
        unset_sanhuNetIn();
      } else {
        set_sanhuNetIn((String)value);
      }
      break;

    case IN_TOTAL:
      if (value == null) {
        unset_inTotal();
      } else {
        set_inTotal((String)value);
      }
      break;

    case OUT_TOTAL:
      if (value == null) {
        unset_outTotal();
      } else {
        set_outTotal((String)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case ZHULI_IN_RATE:
      return get_zhuliInRate();

    case ZHULI_OUT_RATE:
      return get_zhuliOutRate();

    case ZHULI_IN:
      return get_zhuliIn();

    case ZHULI_OUT:
      return get_zhuliOut();

    case ZHULI_NET_IN:
      return get_zhuliNetIn();

    case SANHU_IN_RATE:
      return get_sanhuInRate();

    case SANHU_OUT_RATE:
      return get_sanhuOutRate();

    case SANHU_NET_IN:
      return get_sanhuNetIn();

    case IN_TOTAL:
      return get_inTotal();

    case OUT_TOTAL:
      return get_outTotal();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case ZHULI_IN_RATE:
      return is_set_zhuliInRate();
    case ZHULI_OUT_RATE:
      return is_set_zhuliOutRate();
    case ZHULI_IN:
      return is_set_zhuliIn();
    case ZHULI_OUT:
      return is_set_zhuliOut();
    case ZHULI_NET_IN:
      return is_set_zhuliNetIn();
    case SANHU_IN_RATE:
      return is_set_sanhuInRate();
    case SANHU_OUT_RATE:
      return is_set_sanhuOutRate();
    case SANHU_NET_IN:
      return is_set_sanhuNetIn();
    case IN_TOTAL:
      return is_set_inTotal();
    case OUT_TOTAL:
      return is_set_outTotal();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof Funds)
      return this.equals((Funds)that);
    return false;
  }

  public boolean equals(Funds that) {
    if (that == null)
      return false;

    boolean this_present_zhuliInRate = true;
    boolean that_present_zhuliInRate = true;
    if (this_present_zhuliInRate || that_present_zhuliInRate) {
      if (!(this_present_zhuliInRate && that_present_zhuliInRate))
        return false;
      if (this.zhuliInRate != that.zhuliInRate)
        return false;
    }

    boolean this_present_zhuliOutRate = true;
    boolean that_present_zhuliOutRate = true;
    if (this_present_zhuliOutRate || that_present_zhuliOutRate) {
      if (!(this_present_zhuliOutRate && that_present_zhuliOutRate))
        return false;
      if (this.zhuliOutRate != that.zhuliOutRate)
        return false;
    }

    boolean this_present_zhuliIn = true && this.is_set_zhuliIn();
    boolean that_present_zhuliIn = true && that.is_set_zhuliIn();
    if (this_present_zhuliIn || that_present_zhuliIn) {
      if (!(this_present_zhuliIn && that_present_zhuliIn))
        return false;
      if (!this.zhuliIn.equals(that.zhuliIn))
        return false;
    }

    boolean this_present_zhuliOut = true && this.is_set_zhuliOut();
    boolean that_present_zhuliOut = true && that.is_set_zhuliOut();
    if (this_present_zhuliOut || that_present_zhuliOut) {
      if (!(this_present_zhuliOut && that_present_zhuliOut))
        return false;
      if (!this.zhuliOut.equals(that.zhuliOut))
        return false;
    }

    boolean this_present_zhuliNetIn = true && this.is_set_zhuliNetIn();
    boolean that_present_zhuliNetIn = true && that.is_set_zhuliNetIn();
    if (this_present_zhuliNetIn || that_present_zhuliNetIn) {
      if (!(this_present_zhuliNetIn && that_present_zhuliNetIn))
        return false;
      if (!this.zhuliNetIn.equals(that.zhuliNetIn))
        return false;
    }

    boolean this_present_sanhuInRate = true;
    boolean that_present_sanhuInRate = true;
    if (this_present_sanhuInRate || that_present_sanhuInRate) {
      if (!(this_present_sanhuInRate && that_present_sanhuInRate))
        return false;
      if (this.sanhuInRate != that.sanhuInRate)
        return false;
    }

    boolean this_present_sanhuOutRate = true;
    boolean that_present_sanhuOutRate = true;
    if (this_present_sanhuOutRate || that_present_sanhuOutRate) {
      if (!(this_present_sanhuOutRate && that_present_sanhuOutRate))
        return false;
      if (this.sanhuOutRate != that.sanhuOutRate)
        return false;
    }

    boolean this_present_sanhuNetIn = true && this.is_set_sanhuNetIn();
    boolean that_present_sanhuNetIn = true && that.is_set_sanhuNetIn();
    if (this_present_sanhuNetIn || that_present_sanhuNetIn) {
      if (!(this_present_sanhuNetIn && that_present_sanhuNetIn))
        return false;
      if (!this.sanhuNetIn.equals(that.sanhuNetIn))
        return false;
    }

    boolean this_present_inTotal = true && this.is_set_inTotal();
    boolean that_present_inTotal = true && that.is_set_inTotal();
    if (this_present_inTotal || that_present_inTotal) {
      if (!(this_present_inTotal && that_present_inTotal))
        return false;
      if (!this.inTotal.equals(that.inTotal))
        return false;
    }

    boolean this_present_outTotal = true && this.is_set_outTotal();
    boolean that_present_outTotal = true && that.is_set_outTotal();
    if (this_present_outTotal || that_present_outTotal) {
      if (!(this_present_outTotal && that_present_outTotal))
        return false;
      if (!this.outTotal.equals(that.outTotal))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    List<Object> list = new ArrayList<Object>();

    boolean present_zhuliInRate = true;
    list.add(present_zhuliInRate);
    if (present_zhuliInRate)
      list.add(zhuliInRate);

    boolean present_zhuliOutRate = true;
    list.add(present_zhuliOutRate);
    if (present_zhuliOutRate)
      list.add(zhuliOutRate);

    boolean present_zhuliIn = true && (is_set_zhuliIn());
    list.add(present_zhuliIn);
    if (present_zhuliIn)
      list.add(zhuliIn);

    boolean present_zhuliOut = true && (is_set_zhuliOut());
    list.add(present_zhuliOut);
    if (present_zhuliOut)
      list.add(zhuliOut);

    boolean present_zhuliNetIn = true && (is_set_zhuliNetIn());
    list.add(present_zhuliNetIn);
    if (present_zhuliNetIn)
      list.add(zhuliNetIn);

    boolean present_sanhuInRate = true;
    list.add(present_sanhuInRate);
    if (present_sanhuInRate)
      list.add(sanhuInRate);

    boolean present_sanhuOutRate = true;
    list.add(present_sanhuOutRate);
    if (present_sanhuOutRate)
      list.add(sanhuOutRate);

    boolean present_sanhuNetIn = true && (is_set_sanhuNetIn());
    list.add(present_sanhuNetIn);
    if (present_sanhuNetIn)
      list.add(sanhuNetIn);

    boolean present_inTotal = true && (is_set_inTotal());
    list.add(present_inTotal);
    if (present_inTotal)
      list.add(inTotal);

    boolean present_outTotal = true && (is_set_outTotal());
    list.add(present_outTotal);
    if (present_outTotal)
      list.add(outTotal);

    return list.hashCode();
  }

  @Override
  public int compareTo(Funds other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(is_set_zhuliInRate()).compareTo(other.is_set_zhuliInRate());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (is_set_zhuliInRate()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.zhuliInRate, other.zhuliInRate);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(is_set_zhuliOutRate()).compareTo(other.is_set_zhuliOutRate());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (is_set_zhuliOutRate()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.zhuliOutRate, other.zhuliOutRate);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(is_set_zhuliIn()).compareTo(other.is_set_zhuliIn());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (is_set_zhuliIn()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.zhuliIn, other.zhuliIn);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(is_set_zhuliOut()).compareTo(other.is_set_zhuliOut());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (is_set_zhuliOut()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.zhuliOut, other.zhuliOut);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(is_set_zhuliNetIn()).compareTo(other.is_set_zhuliNetIn());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (is_set_zhuliNetIn()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.zhuliNetIn, other.zhuliNetIn);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(is_set_sanhuInRate()).compareTo(other.is_set_sanhuInRate());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (is_set_sanhuInRate()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.sanhuInRate, other.sanhuInRate);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(is_set_sanhuOutRate()).compareTo(other.is_set_sanhuOutRate());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (is_set_sanhuOutRate()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.sanhuOutRate, other.sanhuOutRate);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(is_set_sanhuNetIn()).compareTo(other.is_set_sanhuNetIn());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (is_set_sanhuNetIn()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.sanhuNetIn, other.sanhuNetIn);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(is_set_inTotal()).compareTo(other.is_set_inTotal());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (is_set_inTotal()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.inTotal, other.inTotal);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(is_set_outTotal()).compareTo(other.is_set_outTotal());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (is_set_outTotal()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.outTotal, other.outTotal);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("Funds(");
    boolean first = true;

    sb.append("zhuliInRate:");
    sb.append(this.zhuliInRate);
    first = false;
    if (!first) sb.append(", ");
    sb.append("zhuliOutRate:");
    sb.append(this.zhuliOutRate);
    first = false;
    if (!first) sb.append(", ");
    sb.append("zhuliIn:");
    if (this.zhuliIn == null) {
      sb.append("null");
    } else {
      sb.append(this.zhuliIn);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("zhuliOut:");
    if (this.zhuliOut == null) {
      sb.append("null");
    } else {
      sb.append(this.zhuliOut);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("zhuliNetIn:");
    if (this.zhuliNetIn == null) {
      sb.append("null");
    } else {
      sb.append(this.zhuliNetIn);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("sanhuInRate:");
    sb.append(this.sanhuInRate);
    first = false;
    if (!first) sb.append(", ");
    sb.append("sanhuOutRate:");
    sb.append(this.sanhuOutRate);
    first = false;
    if (is_set_sanhuNetIn()) {
      if (!first) sb.append(", ");
      sb.append("sanhuNetIn:");
      if (this.sanhuNetIn == null) {
        sb.append("null");
      } else {
        sb.append(this.sanhuNetIn);
      }
      first = false;
    }
    if (is_set_inTotal()) {
      if (!first) sb.append(", ");
      sb.append("inTotal:");
      if (this.inTotal == null) {
        sb.append("null");
      } else {
        sb.append(this.inTotal);
      }
      first = false;
    }
    if (is_set_outTotal()) {
      if (!first) sb.append(", ");
      sb.append("outTotal:");
      if (this.outTotal == null) {
        sb.append("null");
      } else {
        sb.append(this.outTotal);
      }
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    if (!is_set_zhuliInRate()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'zhuliInRate' is unset! Struct:" + toString());
    }

    if (!is_set_zhuliOutRate()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'zhuliOutRate' is unset! Struct:" + toString());
    }

    if (!is_set_zhuliIn()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'zhuliIn' is unset! Struct:" + toString());
    }

    if (!is_set_zhuliOut()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'zhuliOut' is unset! Struct:" + toString());
    }

    if (!is_set_zhuliNetIn()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'zhuliNetIn' is unset! Struct:" + toString());
    }

    if (!is_set_sanhuInRate()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'sanhuInRate' is unset! Struct:" + toString());
    }

    if (!is_set_sanhuOutRate()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'sanhuOutRate' is unset! Struct:" + toString());
    }

    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te.getMessage());
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te.getMessage());
    }
  }

  private static class FundsStandardSchemeFactory implements SchemeFactory {
    public FundsStandardScheme getScheme() {
      return new FundsStandardScheme();
    }
  }

  private static class FundsStandardScheme extends StandardScheme<Funds> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, Funds struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // ZHULI_IN_RATE
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.zhuliInRate = iprot.readDouble();
              struct.set_zhuliInRate_isSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // ZHULI_OUT_RATE
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.zhuliOutRate = iprot.readDouble();
              struct.set_zhuliOutRate_isSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // ZHULI_IN
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.zhuliIn = iprot.readString();
              struct.set_zhuliIn_isSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // ZHULI_OUT
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.zhuliOut = iprot.readString();
              struct.set_zhuliOut_isSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // ZHULI_NET_IN
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.zhuliNetIn = iprot.readString();
              struct.set_zhuliNetIn_isSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // SANHU_IN_RATE
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.sanhuInRate = iprot.readDouble();
              struct.set_sanhuInRate_isSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // SANHU_OUT_RATE
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.sanhuOutRate = iprot.readDouble();
              struct.set_sanhuOutRate_isSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // SANHU_NET_IN
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.sanhuNetIn = iprot.readString();
              struct.set_sanhuNetIn_isSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // IN_TOTAL
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.inTotal = iprot.readString();
              struct.set_inTotal_isSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // OUT_TOTAL
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.outTotal = iprot.readString();
              struct.set_outTotal_isSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, Funds struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      oprot.writeFieldBegin(ZHULI_IN_RATE_FIELD_DESC);
      oprot.writeDouble(struct.zhuliInRate);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(ZHULI_OUT_RATE_FIELD_DESC);
      oprot.writeDouble(struct.zhuliOutRate);
      oprot.writeFieldEnd();
      if (struct.zhuliIn != null) {
        oprot.writeFieldBegin(ZHULI_IN_FIELD_DESC);
        oprot.writeString(struct.zhuliIn);
        oprot.writeFieldEnd();
      }
      if (struct.zhuliOut != null) {
        oprot.writeFieldBegin(ZHULI_OUT_FIELD_DESC);
        oprot.writeString(struct.zhuliOut);
        oprot.writeFieldEnd();
      }
      if (struct.zhuliNetIn != null) {
        oprot.writeFieldBegin(ZHULI_NET_IN_FIELD_DESC);
        oprot.writeString(struct.zhuliNetIn);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(SANHU_IN_RATE_FIELD_DESC);
      oprot.writeDouble(struct.sanhuInRate);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(SANHU_OUT_RATE_FIELD_DESC);
      oprot.writeDouble(struct.sanhuOutRate);
      oprot.writeFieldEnd();
      if (struct.sanhuNetIn != null) {
        if (struct.is_set_sanhuNetIn()) {
          oprot.writeFieldBegin(SANHU_NET_IN_FIELD_DESC);
          oprot.writeString(struct.sanhuNetIn);
          oprot.writeFieldEnd();
        }
      }
      if (struct.inTotal != null) {
        if (struct.is_set_inTotal()) {
          oprot.writeFieldBegin(IN_TOTAL_FIELD_DESC);
          oprot.writeString(struct.inTotal);
          oprot.writeFieldEnd();
        }
      }
      if (struct.outTotal != null) {
        if (struct.is_set_outTotal()) {
          oprot.writeFieldBegin(OUT_TOTAL_FIELD_DESC);
          oprot.writeString(struct.outTotal);
          oprot.writeFieldEnd();
        }
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class FundsTupleSchemeFactory implements SchemeFactory {
    public FundsTupleScheme getScheme() {
      return new FundsTupleScheme();
    }
  }

  private static class FundsTupleScheme extends TupleScheme<Funds> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, Funds struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      oprot.writeDouble(struct.zhuliInRate);
      oprot.writeDouble(struct.zhuliOutRate);
      oprot.writeString(struct.zhuliIn);
      oprot.writeString(struct.zhuliOut);
      oprot.writeString(struct.zhuliNetIn);
      oprot.writeDouble(struct.sanhuInRate);
      oprot.writeDouble(struct.sanhuOutRate);
      BitSet optionals = new BitSet();
      if (struct.is_set_sanhuNetIn()) {
        optionals.set(0);
      }
      if (struct.is_set_inTotal()) {
        optionals.set(1);
      }
      if (struct.is_set_outTotal()) {
        optionals.set(2);
      }
      oprot.writeBitSet(optionals, 3);
      if (struct.is_set_sanhuNetIn()) {
        oprot.writeString(struct.sanhuNetIn);
      }
      if (struct.is_set_inTotal()) {
        oprot.writeString(struct.inTotal);
      }
      if (struct.is_set_outTotal()) {
        oprot.writeString(struct.outTotal);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, Funds struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      struct.zhuliInRate = iprot.readDouble();
      struct.set_zhuliInRate_isSet(true);
      struct.zhuliOutRate = iprot.readDouble();
      struct.set_zhuliOutRate_isSet(true);
      struct.zhuliIn = iprot.readString();
      struct.set_zhuliIn_isSet(true);
      struct.zhuliOut = iprot.readString();
      struct.set_zhuliOut_isSet(true);
      struct.zhuliNetIn = iprot.readString();
      struct.set_zhuliNetIn_isSet(true);
      struct.sanhuInRate = iprot.readDouble();
      struct.set_sanhuInRate_isSet(true);
      struct.sanhuOutRate = iprot.readDouble();
      struct.set_sanhuOutRate_isSet(true);
      BitSet incoming = iprot.readBitSet(3);
      if (incoming.get(0)) {
        struct.sanhuNetIn = iprot.readString();
        struct.set_sanhuNetIn_isSet(true);
      }
      if (incoming.get(1)) {
        struct.inTotal = iprot.readString();
        struct.set_inTotal_isSet(true);
      }
      if (incoming.get(2)) {
        struct.outTotal = iprot.readString();
        struct.set_outTotal_isSet(true);
      }
    }
  }

}

